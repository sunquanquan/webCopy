(function (q, o, s) {
    var n = null, k = null, l = true;
    var p = {
        tit: "提示信息",
        w: {"*": "不能为空！", "*6-16": "请填写6到16位任意字符！", n: "请填写数字！", "n6-16": "请填写6到16位数字！", s: "不能输入特殊字符！", "s6-18": "请填写6到18位字符！", p: "请填写邮政编码！", m: "请填写手机号码！", e: "邮箱地址格式不对！", url: "请填写网址！"},
        def: "请填写正确信息！",
        undef: "datatype未定义！",
        reck: "两次输入的内容不一致！",
        r: "通过信息验证！",
        c: "正在检测信息…",
        s: "请{填写|选择}{0|信息}！",
        v: "所填信息没有经过验证，请稍后…",
        p: "正在提交数据…"
    };
    q.Tipmsg = p;
    var t = function (b, d, c) {
        var d = q.extend({}, t.defaults, d);
        d.datatype && q.extend(t.util.dataType, d.datatype);
        var a = this;
        a.tipmsg = {w: {}};
        a.forms = b;
        a.objects = [];
        if (c === true) {
            return false
        }
        b.each(function () {
            if (this.validform_inited == "inited") {
                return true
            }
            this.validform_inited = "inited";
            var e = this;
            e.settings = q.extend({}, d);
            var f = q(e);
            e.validform_status = "normal";
            f.data("tipmsg", a.tipmsg);
            f.delegate("[datatype]", "blur", function () {
                var g = arguments[1];
                t.util.check.call(this, f, g)
            });
            f.delegate(":text", "keypress", function (g) {
                if (g.keyCode == 13 && f.find(":submit").length == 0) {
                    f.submit()
                }
            });
            t.util.enhance.call(f, e.settings.tiptype, e.settings.usePlugin, e.settings.tipSweep);
            e.settings.btnSubmit && f.find(e.settings.btnSubmit).bind("click", function () {
                f.trigger("submit");
                return false
            });
            f.submit(function () {
                var g = t.util.submitForm.call(f, e.settings);
                g === s && (g = true);
                return g
            });
            f.find("[type='reset']").add(f.find(e.settings.btnReset)).bind("click", function () {
                t.util.resetForm.call(f)
            })
        });
        if (d.tiptype == 1 || (d.tiptype == 2 || d.tiptype == 3) && d.ajaxPost) {
            r()
        }
    };
    t.defaults = {tiptype: 1, tipSweep: false, showAllError: false, postonce: false, ajaxPost: false};
    t.util = {
        dataType: {
            "*": /[\w\W]+/,
            "*6-16": /^[\w\W]{6,16}$/,
            n: /^\d+$/,
            "n6-16": /^\d{6,16}$/,
            s: /^[\u4E00-\u9FA5\uf900-\ufa2d\w\.\s]+$/,
            "s6-18": /^[\u4E00-\u9FA5\uf900-\ufa2d\w\.\s]{6,18}$/,
            p: /^[0-9]{6}$/,
            m: /^13[0-9]{9}$|14[0-9]{9}|15[0-9]{9}$|18[0-9]{9}$/,
            e: /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,
            url: /^(\w+:\/\/)?\w+(\.\w+)+.*$/
        }, toString: Object.prototype.toString, isEmpty: function (a) {
            return a === "" || a === q.trim(this.attr("tip"))
        }, getValue: function (a) {
            var b, c = this;
            if (a.is(":radio")) {
                b = c.find(":radio[name='" + a.attr("name") + "']:checked").val();
                b = b === s ? "" : b
            } else {
                if (a.is(":checkbox")) {
                    b = "";
                    c.find(":checkbox[name='" + a.attr("name") + "']:checked").each(function () {
                        b += q(this).val() + ","
                    });
                    b = b === s ? "" : b
                } else {
                    b = a.val()
                }
            }
            b = b;
            return t.util.isEmpty.call(a, b) ? "" : b
        }, enhance: function (b, a, e, c) {
            var d = this;
            d.find("[datatype]").each(function () {
                if (b == 2) {
                    if (q(this).parent().next().find(".Validform_checktip").length == 0) {
                        q(this).parent().next().append("<span class='Validform_checktip' />");
                        q(this).siblings(".Validform_checktip").remove()
                    }
                } else {
                    if (b == 3 || b == 4) {
                        if (q(this).siblings(".Validform_checktip").length == 0) {
                            q(this).parent().append("<span class='Validform_checktip' />");
                            q(this).parent().next().find(".Validform_checktip").remove()
                        }
                    }
                }
            });
            d.find("input[recheck]").each(function () {
                if (this.validform_inited == "inited") {
                    return true
                }
                this.validform_inited = "inited";
                var f = q(this);
                var g = d.find("input[name='" + q(this).attr("recheck") + "']");
                g.bind("keyup", function () {
                    if (g.val() == f.val() && g.val() != "") {
                        if (g.attr("tip")) {
                            if (g.attr("tip") == g.val()) {
                                return false
                            }
                        }
                        f.trigger("blur")
                    }
                }).bind("blur", function () {
                    if (g.val() != f.val() && f.val() != "") {
                        if (f.attr("tip")) {
                            if (f.attr("tip") == f.val()) {
                                return false
                            }
                        }
                        f.trigger("blur")
                    }
                })
            });
            d.find("[tip]").each(function () {
                if (this.validform_inited == "inited") {
                    return true
                }
                this.validform_inited = "inited";
                var f = q(this).attr("tip");
                var g = q(this).attr("altercss");
                q(this).focus(function () {
                    if (q(this).val() == f) {
                        q(this).val("");
                        if (g) {
                            q(this).removeClass(g)
                        }
                    }
                }).blur(function () {
                    if (q.trim(q(this).val()) === "") {
                        q(this).val(f);
                        if (g) {
                            q(this).addClass(g)
                        }
                    }
                })
            });
            d.find(":checkbox[datatype],:radio[datatype]").each(function () {
                if (this.validform_inited == "inited") {
                    return true
                }
                this.validform_inited = "inited";
                var f = q(this);
                var g = f.attr("name");
                d.find("[name='" + g + "']").filter(":checkbox,:radio").bind("click", function () {
                    setTimeout(function () {
                        f.trigger("blur")
                    }, 0)
                })
            });
            d.find("select[datatype][multiple]").bind("click", function () {
                var f = q(this);
                setTimeout(function () {
                    f.trigger("blur")
                }, 0)
            });
            t.util.usePlugin.call(d, a, b, e, c)
        }, usePlugin: function (d, g, e, a) {
            var i = this, d = d || {};
            if (i.find("input[plugin='swfupload']").length && typeof(swfuploadhandler) != "undefined") {
                var h = {
                    custom_settings: {
                        form: i, showmsg: function (j, x, w) {
                            t.util.showmsg.call(i, j, g, {obj: i.find("input[plugin='swfupload']"), type: x, sweep: e})
                        }
                    }
                };
                h = q.extend(true, {}, d.swfupload, h);
                i.find("input[plugin='swfupload']").each(function (j) {
                    if (this.validform_inited == "inited") {
                        return true
                    }
                    this.validform_inited = "inited";
                    q(this).val("");
                    swfuploadhandler.init(h, j)
                })
            }
            if (i.find("input[plugin='datepicker']").length && q.fn.datePicker) {
                d.datepicker = d.datepicker || {};
                if (d.datepicker.format) {
                    Date.format = d.datepicker.format;
                    delete d.datepicker.format
                }
                if (d.datepicker.firstDayOfWeek) {
                    Date.firstDayOfWeek = d.datepicker.firstDayOfWeek;
                    delete d.datepicker.firstDayOfWeek
                }
                i.find("input[plugin='datepicker']").each(function (j) {
                    if (this.validform_inited == "inited") {
                        return true
                    }
                    this.validform_inited = "inited";
                    d.datepicker.callback && q(this).bind("dateSelected", function () {
                        var v = new Date(q.event._dpCache[this._dpId].getSelected()[0]).asString(Date.format);
                        d.datepicker.callback(v, this)
                    });
                    q(this).datePicker(d.datepicker)
                })
            }
            if (i.find("input[plugin*='passwordStrength']").length && q.fn.passwordStrength) {
                d.passwordstrength = d.passwordstrength || {};
                d.passwordstrength.showmsg = function (w, j, x) {
                    t.util.showmsg.call(i, j, g, {obj: w, type: x, sweep: e})
                };
                i.find("input[plugin='passwordStrength']").each(function (j) {
                    if (this.validform_inited == "inited") {
                        return true
                    }
                    this.validform_inited = "inited";
                    q(this).passwordStrength(d.passwordstrength)
                })
            }
            if (a != "addRule" && d.jqtransform && q.fn.jqTransSelect) {
                if (i[0].jqTransSelected == "true") {
                    return
                }
                i[0].jqTransSelected = "true";
                var f = function (v) {
                    var j = q(".jqTransformSelectWrapper ul:visible");
                    j.each(function () {
                        var u = q(this).parents(".jqTransformSelectWrapper:first").find("select").get(0);
                        if (!(v && u.oLabel && u.oLabel.get(0) == v.get(0))) {
                            q(this).hide()
                        }
                    })
                };
                var c = function (j) {
                    if (q(j.target).parents(".jqTransformSelectWrapper").length === 0) {
                        f(q(j.target))
                    }
                };
                var b = function () {
                    q(document).mousedown(c)
                };
                if (d.jqtransform.selector) {
                    i.find(d.jqtransform.selector).filter('input:submit, input:reset, input[type="button"]').jqTransInputButton();
                    i.find(d.jqtransform.selector).filter("input:text, input:password").jqTransInputText();
                    i.find(d.jqtransform.selector).filter("input:checkbox").jqTransCheckBox();
                    i.find(d.jqtransform.selector).filter("input:radio").jqTransRadio();
                    i.find(d.jqtransform.selector).filter("textarea").jqTransTextarea();
                    if (i.find(d.jqtransform.selector).filter("select").length > 0) {
                        i.find(d.jqtransform.selector).filter("select").jqTransSelect();
                        b()
                    }
                } else {
                    i.jqTransform()
                }
                i.find(".jqTransformSelectWrapper").find("li a").click(function () {
                    q(this).parents(".jqTransformSelectWrapper").find("select").trigger("blur")
                })
            }
        }, getNullmsg: function (d) {
            var e = this;
            var a = /[\u4E00-\u9FA5\uf900-\ufa2da-zA-Z\s]+/g;
            var c;
            var b = d[0].settings.label || ".Validform_label";
            b = e.siblings(b).eq(0).text() || e.siblings().find(b).eq(0).text() || e.parent().siblings(b).eq(0).text() || e.parent().siblings().find(b).eq(0).text();
            b = b.replace(/\s(?![a-zA-Z])/g, "").match(a);
            b = b ? b.join("") : [""];
            a = /\{(.+)\|(.+)\}/;
            c = d.data("tipmsg").s || p.s;
            if (b != "") {
                c = c.replace(/\{0\|(.+)\}/, b);
                if (e.attr("recheck")) {
                    c = c.replace(/\{(.+)\}/, "");
                    e.attr("nullmsg", c);
                    return c
                }
            } else {
                c = e.is(":checkbox,:radio,select") ? c.replace(/\{0\|(.+)\}/, "") : c.replace(/\{0\|(.+)\}/, "$1")
            }
            c = e.is(":checkbox,:radio,select") ? c.replace(a, "$2") : c.replace(a, "$1");
            e.attr("nullmsg", c);
            return c
        }, getErrormsg: function (v, e, i) {
            var d = /^(.+?)((\d+)-(\d+))?$/, f = /^(.+?)(\d+)-(\d+)$/, g = /(.*?)\d+(.+?)\d+(.*)/, b = e.match(d), j, a;
            if (i == "recheck") {
                a = v.data("tipmsg").reck || p.reck;
                return a
            }
            var c = q.extend({}, p.w, v.data("tipmsg").w);
            if (b[0] in c) {
                return v.data("tipmsg").w[b[0]] || p.w[b[0]]
            }
            for (var h in c) {
                if (h.indexOf(b[1]) != -1 && f.test(h)) {
                    a = (v.data("tipmsg").w[h] || p.w[h]).replace(g, "$1" + b[3] + "$2" + b[4] + "$3");
                    v.data("tipmsg").w[b[0]] = a;
                    return a
                }
            }
            return v.data("tipmsg").def || p.def
        }, _regcheck: function (g, G, f, E) {
            var E = E, b = null, e = false, F = /\/.+\//g, J = /^(.+?)(\d+)-(\d+)$/, I = 3;
            if (F.test(g)) {
                var h = g.match(F)[0].slice(1, -1);
                var i = g.replace(F, "");
                var C = RegExp(h, i);
                e = C.test(G)
            } else {
                if (t.util.toString.call(t.util.dataType[g]) == "[object Function]") {
                    e = t.util.dataType[g](G, f, E, t.util.dataType);
                    if (e === true || e === s) {
                        e = true
                    } else {
                        b = e;
                        e = false
                    }
                } else {
                    if (!(g in t.util.dataType)) {
                        var H = g.match(J), a;
                        if (!H) {
                            e = false;
                            b = E.data("tipmsg").undef || p.undef
                        } else {
                            for (var j in t.util.dataType) {
                                a = j.match(J);
                                if (!a) {
                                    continue
                                }
                                if (H[1] === a[1]) {
                                    var d = t.util.dataType[j].toString(), i = d.match(/\/[mgi]*/g)[1].replace("/", ""), c = new RegExp("\\{" + a[2] + "," + a[3] + "\\}", "g");
                                    d = d.replace(/\/[mgi]*/g, "/").replace(c, "{" + H[2] + "," + H[3] + "}").replace(/^\//, "").replace(/\/$/, "");
                                    t.util.dataType[g] = new RegExp(d, i);
                                    break
                                }
                            }
                        }
                    }
                    if (t.util.toString.call(t.util.dataType[g]) == "[object RegExp]") {
                        e = t.util.dataType[g].test(G)
                    }
                }
            }
            if (e) {
                I = 2;
                b = f.attr("sucmsg") || E.data("tipmsg").r || p.r;
                if (f.attr("recheck")) {
                    var D = E.find("input[name='" + f.attr("recheck") + "']:first");
                    if (G != D.val()) {
                        e = false;
                        I = 3;
                        b = f.attr("errormsg") || t.util.getErrormsg.call(f, E, g, "recheck")
                    }
                }
            } else {
                b = b || f.attr("errormsg") || t.util.getErrormsg.call(f, E, g);
                if (t.util.isEmpty.call(f, G)) {
                    b = f.attr("nullmsg") || t.util.getNullmsg.call(f, E)
                }
            }
            return {passed: e, type: I, info: b}
        }, regcheck: function (e, v, f) {
            var j = this, h = null, g = false, a = 3;
            if (f.attr("ignore") === "ignore" && t.util.isEmpty.call(f, v)) {
                if (f.data("cked")) {
                    h = ""
                }
                return {passed: true, type: 4, info: h}
            }
            f.data("cked", "cked");
            var i = t.util.parseDatatype(e);
            var b;
            for (var c = 0; c < i.length; c++) {
                for (var d = 0; d < i[c].length; d++) {
                    b = t.util._regcheck(i[c][d], v, f, j);
                    if (!b.passed) {
                        break
                    }
                }
                if (b.passed) {
                    break
                }
            }
            return b
        }, parseDatatype: function (d) {
            var e = /\/.+?\/[mgi]*(?=(,|$|\||\s))|[\w\*-]+/g, g = d.match(e), f = d.replace(e, "").replace(/\s*/g, "").split(""), a = [], b = 0;
            a[0] = [];
            a[0].push(g[0]);
            for (var c = 0; c < f.length; c++) {
                if (f[c] == "|") {
                    b++;
                    a[b] = []
                }
                a[b].push(g[c + 1])
            }
            return a
        }, showmsg: function (d, b, a, c) {
            if (d == s) {
                return
            }
            if (c == "bycheck" && a.sweep && (a.obj && !a.obj.is(".Validform_error") || typeof b == "function")) {
                return
            }
            q.extend(a, {curform: this});
            if (typeof b == "function") {
                b(d, a, t.util.cssctl);
                return
            }
            if (b == 1 || c == "byajax" && b != 4) {
                k.find(".Validform_info").html(d)
            }
            if (b == 1 && c != "bycheck" && a.type != 2 || c == "byajax" && b != 4) {
                l = false;
                k.find(".iframe").css("height", k.outerHeight());
                k.show();
                m(k, 100)
            }
            if (b == 2 && a.obj) {
                a.obj.parent().next().find(".Validform_checktip").html(d);
                t.util.cssctl(a.obj.parent().next().find(".Validform_checktip"), a.type)
            }
            if ((b == 3 || b == 4) && a.obj) {
                a.obj.siblings(".Validform_checktip").html(d);
                t.util.cssctl(a.obj.siblings(".Validform_checktip"), a.type)
            }
        }, cssctl: function (a, b) {
            switch (b) {
                case 1:
                    a.removeClass("Validform_right Validform_wrong").addClass("Validform_checktip Validform_loading");
                    break;
                case 2:
                    a.removeClass("Validform_wrong Validform_loading").addClass("Validform_checktip Validform_right");
                    break;
                case 4:
                    a.removeClass("Validform_right Validform_wrong Validform_loading").addClass("Validform_checktip");
                    break;
                default:
                    a.removeClass("Validform_right Validform_loading").addClass("Validform_checktip Validform_wrong")
            }
        }, check: function (j, y, e) {
            var d = j[0].settings;
            var y = y || "";
            var h = t.util.getValue.call(j, q(this));
            if (d.ignoreHidden && q(this).is(":hidden") || q(this).data("dataIgnore") === "dataIgnore") {
                return true
            }
            if (d.dragonfly && !q(this).data("cked") && t.util.isEmpty.call(q(this), h) && q(this).attr("ignore") != "ignore") {
                return false
            }
            var z = t.util.regcheck.call(j, q(this).attr("datatype"), h, q(this));
            if (h == this.validform_lastval && !q(this).attr("recheck") && y == "") {
                return z.passed ? true : false
            }
            this.validform_lastval = h;
            var a;
            n = a = q(this);
            if (!z.passed) {
                t.util.abort.call(a[0]);
                if (!e) {
                    t.util.showmsg.call(j, z.info, d.tiptype, {obj: q(this), type: z.type, sweep: d.tipSweep}, "bycheck");
                    !d.tipSweep && a.addClass("Validform_error")
                }
                return false
            }
            var b = q(this).attr("ajaxurl");
            if (b && !t.util.isEmpty.call(q(this), h) && !e) {
                var f = q(this);
                if (y == "postform") {
                    f[0].validform_subpost = "postform"
                } else {
                    f[0].validform_subpost = ""
                }
                if (f[0].validform_valid === "posting" && h == f[0].validform_ckvalue) {
                    return "ajax"
                }
                f[0].validform_valid = "posting";
                f[0].validform_ckvalue = h;
                t.util.showmsg.call(j, j.data("tipmsg").c || p.c, d.tiptype, {obj: f, type: 1, sweep: d.tipSweep}, "bycheck");
                t.util.abort.call(a[0]);
                var x = q.extend(true, {}, d.ajaxurl || {});
                var c = {
                    type: "POST", cache: false, url: b, data: "param=" + encodeURIComponent(h) + "&name=" + encodeURIComponent(q(this).attr("name")), success: function (u) {
                        if (q.trim(u.status) === "y") {
                            f[0].validform_valid = "true";
                            u.info && f.attr("sucmsg", u.info);
                            t.util.showmsg.call(j, f.attr("sucmsg") || j.data("tipmsg").r || p.r, d.tiptype, {obj: f, type: 2, sweep: d.tipSweep}, "bycheck");
                            a.removeClass("Validform_error");
                            n = null;
                            if (f[0].validform_subpost == "postform") {
                                j.trigger("submit")
                            }
                        } else {
                            f[0].validform_valid = u.info;
                            t.util.showmsg.call(j, u.info, d.tiptype, {obj: f, type: 3, sweep: d.tipSweep});
                            a.addClass("Validform_error")
                        }
                        a[0].validform_ajax = null
                    }, error: function (u) {
                        if (u.status == "200") {
                            if (u.responseText == "y") {
                                x.success({status: "y"})
                            } else {
                                x.success({status: "n", info: u.responseText})
                            }
                            return false
                        }
                        if (u.statusText !== "abort") {
                            var v = "status: " + u.status + "; statusText: " + u.statusText;
                            t.util.showmsg.call(j, v, d.tiptype, {obj: f, type: 3, sweep: d.tipSweep});
                            a.addClass("Validform_error")
                        }
                        f[0].validform_valid = u.statusText;
                        a[0].validform_ajax = null;
                        return true
                    }
                };
                if (x.success) {
                    var i = x.success;
                    x.success = function (u) {
                        c.success(u);
                        i(u, f)
                    }
                }
                if (x.error) {
                    var g = x.error;
                    x.error = function (u) {
                        c.error(u) && g(u, f)
                    }
                }
                x = q.extend({}, c, x, {dataType: "json"});
                a[0].validform_ajax = q.ajax(x);
                return "ajax"
            } else {
                if (b && t.util.isEmpty.call(q(this), h)) {
                    t.util.abort.call(a[0]);
                    a[0].validform_valid = "true"
                }
            }
            if (!e) {
                t.util.showmsg.call(j, z.info, d.tiptype, {obj: q(this), type: z.type, sweep: d.tipSweep}, "bycheck");
                a.removeClass("Validform_error")
            }
            n = null;
            return true
        }, submitForm: function (d, g, h, a, A) {
            var j = this;
            if (j[0].validform_status === "posting") {
                return false
            }
            if (d.postonce && j[0].validform_status === "posted") {
                return false
            }
            var y = d.beforeCheck && d.beforeCheck(j);
            if (y === false) {
                return false
            }
            var B = true, e;
            j.find("[datatype]").each(function () {
                if (g) {
                    return false
                }
                if (d.ignoreHidden && q(this).is(":hidden") || q(this).data("dataIgnore") === "dataIgnore") {
                    return true
                }
                var v = t.util.getValue.call(j, q(this)), u;
                n = u = q(this);
                e = t.util.regcheck.call(j, q(this).attr("datatype"), v, q(this));
                if (!e.passed) {
                    t.util.showmsg.call(j, e.info, d.tiptype, {obj: q(this), type: e.type, sweep: d.tipSweep});
                    u.addClass("Validform_error");
                    if (!d.showAllError) {
                        u.focus();
                        B = false;
                        return false
                    }
                    B && (B = false);
                    return true
                }
                if (q(this).attr("ajaxurl") && !t.util.isEmpty.call(q(this), v)) {
                    if (this.validform_valid !== "true") {
                        var w = q(this);
                        t.util.showmsg.call(j, j.data("tipmsg").v || p.v, d.tiptype, {obj: w, type: 3, sweep: d.tipSweep});
                        u.addClass("Validform_error");
                        w.trigger("blur", ["postform"]);
                        if (!d.showAllError) {
                            B = false;
                            return false
                        }
                        B && (B = false);
                        return true
                    }
                } else {
                    if (q(this).attr("ajaxurl") && t.util.isEmpty.call(q(this), v)) {
                        t.util.abort.call(this);
                        this.validform_valid = "true"
                    }
                }
                t.util.showmsg.call(j, e.info, d.tiptype, {obj: q(this), type: e.type, sweep: d.tipSweep});
                u.removeClass("Validform_error");
                n = null
            });
            if (d.showAllError) {
                j.find(".Validform_error:first").focus()
            }
            if (B) {
                var b = d.beforeSubmit && d.beforeSubmit(j);
                if (b === false) {
                    return false
                }
                j[0].validform_status = "posting";
                if (d.ajaxPost || a === "ajaxPost") {
                    var z = q.extend(true, {}, d.ajaxpost || {});
                    z.url = h || z.url || d.url || j.attr("action");
                    t.util.showmsg.call(j, j.data("tipmsg").p || p.p, d.tiptype, {obj: j, type: 1, sweep: d.tipSweep}, "byajax");
                    if (A) {
                        z.async = false
                    } else {
                        if (A === false) {
                            z.async = true
                        }
                    }
                    if (z.success) {
                        var i = z.success;
                        z.success = function (u) {
                            d.callback && d.callback(u);
                            j[0].validform_ajax = null;
                            if (q.trim(u.status) === "y") {
                                j[0].validform_status = "posted"
                            } else {
                                j[0].validform_status = "normal"
                            }
                            i(u, j)
                        }
                    }
                    if (z.error) {
                        var f = z.error;
                        z.error = function (u) {
                            d.callback && d.callback(u);
                            j[0].validform_status = "normal";
                            j[0].validform_ajax = null;
                            f(u, j)
                        }
                    }
                    var c = {
                        type: "POST", async: true, data: j.serializeArray(), success: function (u) {
                            if (q.trim(u.status) === "y") {
                                j[0].validform_status = "posted";
                                t.util.showmsg.call(j, u.info, d.tiptype, {obj: j, type: 2, sweep: d.tipSweep}, "byajax")
                            } else {
                                j[0].validform_status = "normal";
                                t.util.showmsg.call(j, u.info, d.tiptype, {obj: j, type: 3, sweep: d.tipSweep}, "byajax")
                            }
                            d.callback && d.callback(u);
                            j[0].validform_ajax = null
                        }, error: function (v) {
                            var u = "status: " + v.status + "; statusText: " + v.statusText;
                            t.util.showmsg.call(j, u, d.tiptype, {obj: j, type: 3, sweep: d.tipSweep}, "byajax");
                            d.callback && d.callback(v);
                            j[0].validform_status = "normal";
                            j[0].validform_ajax = null
                        }
                    };
                    z = q.extend({}, c, z, {dataType: "json"});
                    j[0].validform_ajax = q.ajax(z)
                } else {
                    if (!d.postonce) {
                        j[0].validform_status = "normal"
                    }
                    var h = h || d.url;
                    if (h) {
                        j.attr("action", h)
                    }
                    return d.callback && d.callback(j)
                }
            }
            return false
        }, resetForm: function () {
            var a = this;
            a.each(function () {
                this.reset && this.reset();
                this.validform_status = "normal"
            });
            a.find(".Validform_right").text("");
            a.find(".passwordStrength").children().removeClass("bgStrength");
            a.find(".Validform_checktip").removeClass("Validform_wrong Validform_right Validform_loading");
            a.find(".Validform_error").removeClass("Validform_error");
            a.find("[datatype]").removeData("cked").removeData("dataIgnore").each(function () {
                this.validform_lastval = null
            });
            a.eq(0).find("input:first").focus()
        }, abort: function () {
            if (this.validform_ajax) {
                this.validform_ajax.abort()
            }
        }
    };
    q.Datatype = t.util.dataType;
    t.prototype = {
        dataType: t.util.dataType, eq: function (a) {
            var b = this;
            if (a >= b.forms.length) {
                return null
            }
            if (!(a in b.objects)) {
                b.objects[a] = new t(q(b.forms[a]).get(), {}, true)
            }
            return b.objects[a]
        }, resetStatus: function () {
            var a = this;
            q(a.forms).each(function () {
                this.validform_status = "normal"
            });
            return this
        }, setStatus: function (b) {
            var a = this;
            q(a.forms).each(function () {
                this.validform_status = b || "posting"
            });
            return this
        }, getStatus: function () {
            var a = this;
            var b = q(a.forms)[0].validform_status;
            return b
        }, ignore: function (b) {
            var a = this;
            var b = b || "[datatype]";
            q(a.forms).find(b).each(function () {
                q(this).data("dataIgnore", "dataIgnore").removeClass("Validform_error")
            });
            return this
        }, unignore: function (b) {
            var a = this;
            var b = b || "[datatype]";
            q(a.forms).find(b).each(function () {
                q(this).removeData("dataIgnore")
            });
            return this
        }, addRule: function (e) {
            var a = this;
            var e = e || [];
            for (var b = 0; b < e.length; b++) {
                var d = q(a.forms).find(e[b].ele);
                for (var c in e[b]) {
                    c !== "ele" && d.attr(c, e[b][c])
                }
            }
            q(a.forms).each(function () {
                var f = q(this);
                t.util.enhance.call(f, this.settings.tiptype, this.settings.usePlugin, this.settings.tipSweep, "addRule")
            });
            return this
        }, ajaxPost: function (c, a, b) {
            var d = this;
            q(d.forms).each(function () {
                if (this.settings.tiptype == 1 || this.settings.tiptype == 2 || this.settings.tiptype == 3) {
                    r()
                }
                t.util.submitForm.call(q(d.forms[0]), this.settings, c, b, "ajaxPost", a)
            });
            return this
        }, submitForm: function (c, b) {
            var a = this;
            q(a.forms).each(function () {
                var d = t.util.submitForm.call(q(this), this.settings, c, b);
                d === s && (d = true);
                if (d === true) {
                    this.submit()
                }
            });
            return this
        }, resetForm: function () {
            var a = this;
            t.util.resetForm.call(q(a.forms));
            return this
        }, abort: function () {
            var a = this;
            q(a.forms).each(function () {
                t.util.abort.call(this)
            });
            return this
        }, check: function (a, c) {
            var c = c || "[datatype]", d = this, e = q(d.forms), b = true;
            e.find(c).each(function () {
                t.util.check.call(this, e, "", a) || (b = false)
            });
            return b
        }, config: function (b) {
            console.log('aaa')
            var a = this;
            b = b || {};
            q(a.forms).each(function () {
                var c = q(this);
                this.settings = q.extend(true, this.settings, b);
                t.util.enhance.call(c, this.settings.tiptype, this.settings.usePlugin, this.settings.tipSweep)
            });
            return this
        }
    };
    q.fn.Validform = function (a) {
        return new t(this, a)
    };
    function m(d, a) {
        var b = (q(window).width() - d.outerWidth()) / 2, c = (q(window).height() - d.outerHeight()) / 2, c = (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + (c > 0 ? c : 0);
        d.css({left: b}).animate({top: c}, {duration: a, queue: false})
    }

    function r() {
        if (q("#Validform_msg").length !== 0) {
            return false
        }
        k = q('<div id="Validform_msg"><div class="Validform_title">' + p.tit + '<a class="Validform_close" href="javascript:void(0);">&chi;</a></div><div class="Validform_info"></div><div class="iframe"><iframe frameborder="0" scrolling="no" height="100%" width="100%"></iframe></div></div>').appendTo("body");
        k.find("a.Validform_close").click(function () {
            k.hide();
            l = true;
            if (n) {
                n.focus().addClass("Validform_error")
            }
            return false
        }).focus(function () {
            this.blur()
        });
        q(window).bind("scroll resize", function () {
            !l && m(k, 400)
        })
    }

    q.Showmsg = function (a) {
        r();
        t.util.showmsg.call(o, a, 1, {})
    };
    q.Hidemsg = function () {
        k.hide();
        l = true
    }
})(jQuery, window);